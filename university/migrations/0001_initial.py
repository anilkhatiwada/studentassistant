# Generated by Django 5.1.7 on 2025-04-18 19:56

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('location', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='building_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('established_date', models.DateField(blank=True, null=True)),
                ('website', models.URLField(blank=True)),
                ('location', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('publish_date', models.DateTimeField(auto_now_add=True)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('is_urgent', models.BooleanField(default=False)),
                ('target_audience', models.CharField(choices=[('ALL', 'All'), ('STU', 'Students'), ('FAC', 'Faculty'), ('STA', 'Staff')], default='ALL', max_length=20)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('credits', models.PositiveSmallIntegerField(default=3)),
                ('level', models.PositiveSmallIntegerField(choices=[(100, '100 Level'), (200, '200 Level'), (300, '300 Level'), (400, '400 Level'), (500, '500 Level (Graduate)'), (600, '600 Level (Graduate)'), (700, '700 Level (PhD)')])),
                ('is_core', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('learning_outcomes', models.TextField(blank=True)),
                ('syllabus', models.FileField(blank=True, upload_to='syllabi/')),
                ('prerequisites', models.ManyToManyField(blank=True, to='university.course')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.department')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='AcademicProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField()),
                ('program_type', models.CharField(choices=[('MAJ', 'Major'), ('MIN', 'Minor'), ('CERT', 'Certificate'), ('DIP', 'Diploma')], max_length=4)),
                ('degree', models.CharField(blank=True, choices=[('BA', 'Bachelor of Arts'), ('BS', 'Bachelor of Science'), ('MA', 'Master of Arts'), ('MS', 'Master of Science'), ('MBA', 'Master of Business Administration'), ('PHD', 'Doctor of Philosophy')], max_length=3, null=True)),
                ('total_credits_required', models.PositiveSmallIntegerField()),
                ('duration_years', models.PositiveSmallIntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.department')),
            ],
            options={
                'ordering': ['department', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.CharField(choices=[('ASST', 'Assistant Professor'), ('ASSO', 'Associate Professor'), ('PROF', 'Professor'), ('LECT', 'Lecturer'), ('INST', 'Instructor')], max_length=4)),
                ('office_location', models.CharField(max_length=50)),
                ('office_hours', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('hire_date', models.DateField()),
                ('research_interests', models.TextField(blank=True)),
                ('bio', models.TextField(blank=True)),
                ('profile_picture', models.ImageField(blank=True, upload_to='faculty_profiles/')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Faculty',
                'ordering': ['user__last_name', 'user__first_name'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='head_of_department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='headed_department', to='university.faculty'),
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('year', models.PositiveSmallIntegerField()),
                ('season', models.CharField(choices=[('FA', 'Fall'), ('SP', 'Spring'), ('SU', 'Summer'), ('WI', 'Winter')], max_length=2)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('registration_start', models.DateField()),
                ('registration_end', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-year', 'season'],
                'unique_together': {('year', 'season')},
            },
        ),
        migrations.CreateModel(
            name='CourseOffering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(max_length=10)),
                ('capacity', models.PositiveSmallIntegerField()),
                ('enrolled', models.PositiveSmallIntegerField(default=0)),
                ('classroom', models.CharField(blank=True, max_length=50)),
                ('schedule', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.course')),
                ('instructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='university.faculty')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.semester')),
            ],
            options={
                'ordering': ['course', 'section'],
                'unique_together': {('course', 'semester', 'section')},
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, unique=True)),
                ('date_of_birth', models.DateField()),
                ('admission_date', models.DateField()),
                ('expected_graduation', models.DateField()),
                ('degree_type', models.CharField(choices=[('UG', 'Undergraduate'), ('PG', 'Postgraduate'), ('PHD', 'PhD')], max_length=3)),
                ('status', models.CharField(choices=[('A', 'Active'), ('G', 'Graduated'), ('L', 'On Leave'), ('W', 'Withdrawn')], default='A', max_length=1)),
                ('gpa', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(4.0)])),
                ('profile_picture', models.ImageField(blank=True, upload_to='student_profiles/')),
                ('advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='advisees', to='university.faculty')),
                ('current_program', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='university.academicprogram')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user__last_name', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_credits_attempted', models.PositiveSmallIntegerField(default=0)),
                ('total_credits_earned', models.PositiveSmallIntegerField(default=0)),
                ('cumulative_gpa', models.FloatField(default=0.0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='university.student')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_required', models.BooleanField(default=True)),
                ('semester_offered', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.course')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.academicprogram')),
            ],
            options={
                'verbose_name': 'Program-Course Relationship',
                'verbose_name_plural': 'Program-Course Relationships',
                'unique_together': {('program', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(max_length=20)),
                ('capacity', models.PositiveSmallIntegerField()),
                ('room_type', models.CharField(max_length=50)),
                ('features', models.TextField(blank=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.building')),
            ],
            options={
                'unique_together': {('building', 'room_number')},
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField(auto_now_add=True)),
                ('grade', models.CharField(blank=True, choices=[('A', 'A'), ('A-', 'A-'), ('B+', 'B+'), ('B', 'B'), ('B-', 'B-'), ('C+', 'C+'), ('C', 'C'), ('C-', 'C-'), ('D+', 'D+'), ('D', 'D'), ('F', 'F'), ('W', 'Withdrawn'), ('I', 'Incomplete'), ('IP', 'In Progress')], max_length=2, null=True)),
                ('status', models.CharField(default='registered', max_length=20)),
                ('credits_attempted', models.PositiveSmallIntegerField()),
                ('credits_earned', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('is_audit', models.BooleanField(default=False)),
                ('course_offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.courseoffering')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.student')),
            ],
            options={
                'ordering': ['course_offering', 'student'],
                'unique_together': {('student', 'course_offering')},
            },
        ),
    ]
